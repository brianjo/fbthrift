"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4408],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>s,MDXProvider:()=>c,mdx:()=>v,useMDXComponents:()=>p,withMDXComponents:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){return function(t){var n=p(t.components);return r.createElement(e,i({},t,{components:n}))}},p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),u=p(n),c=a,f=u["".concat(l,".").concat(c)]||u[c]||m[c]||i;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=f;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},39050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(83117),a=(n(67294),n(3905));const i={state:"draft"},l="Values",o={unversionedId:"spec/definition/value",id:"spec/definition/value",title:"Values",description:"How Thrift values are declared, evaluated, validated, and manipulated.",source:"@site/../doc/spec/definition/value.md",sourceDirName:"spec/definition",slug:"/spec/definition/value",permalink:"/docs/spec/definition/value",draft:!1,editUrl:"https://github.com/facebook/fbthrift/blob/main/thrift/website/../doc/spec/definition/value.md",tags:[],version:"current",frontMatter:{state:"draft"},sidebar:"sidebar",previous:{title:"Tolerance",permalink:"/docs/spec/definition/tolerance"},next:{title:"Glossary",permalink:"/docs/spec/glossary"}},d={},s=[{value:"Consts and Defaults",id:"consts-and-defaults",level:2},{value:"Properties",id:"properties",level:2},{value:"Equal",id:"equal",level:3},{value:"Identical",id:"identical",level:3},{value:"Empty",id:"empty",level:3},{value:"Operators",id:"operators",level:2},{value:"Clear",id:"clear",level:3},{value:"Hash",id:"hash",level:3}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,a.mdx)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"values"},"Values"),(0,a.mdx)("p",null,"How Thrift values are declared, evaluated, validated, and manipulated."),(0,a.mdx)("h2",{id:"consts-and-defaults"},"Consts and Defaults"),(0,a.mdx)("p",null,"How const and default values function in Thrift."),(0,a.mdx)("h2",{id:"properties"},"Properties"),(0,a.mdx)("p",null,"The properties that can be evaluated for all Thrift values."),(0,a.mdx)("h3",{id:"equal"},"Equal"),(0,a.mdx)("p",null,"If two values should be considered equivalent. For example ",(0,a.mdx)("inlineCode",{parentName:"p"},"-0.0")," is equal to, but not identical to ",(0,a.mdx)("inlineCode",{parentName:"p"},"0.0"),"."),(0,a.mdx)("h3",{id:"identical"},"Identical"),(0,a.mdx)("p",null,"If two values have identical representations. For example ",(0,a.mdx)("inlineCode",{parentName:"p"},"NaN")," is identical to, but not equal to itself."),(0,a.mdx)("h3",{id:"empty"},"Empty"),(0,a.mdx)("p",null,"If a value contains no information (e.g. it is equal to ",(0,a.mdx)("inlineCode",{parentName:"p"},"[]"),"/",(0,a.mdx)("inlineCode",{parentName:"p"},"{}"),"/",(0,a.mdx)("inlineCode",{parentName:"p"},"0"),"/",(0,a.mdx)("inlineCode",{parentName:"p"},'""'),", etc), and would be omitted in a 'terse' context."),(0,a.mdx)("h2",{id:"operators"},"Operators"),(0,a.mdx)("p",null,"The operators that can be applied to all Thrift values."),(0,a.mdx)("h3",{id:"clear"},"Clear"),(0,a.mdx)("p",null,"Sets a value to the types intrinsic default, ignoring any 'custom' defaults."),(0,a.mdx)("h3",{id:"hash"},"Hash"),(0,a.mdx)("p",null,"Computes a deterministic digest of a value."))}p.isMDXComponent=!0}}]);