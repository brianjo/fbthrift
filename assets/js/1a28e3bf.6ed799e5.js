"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6049],{3905:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>c,MDXProvider:()=>d,mdx:()=>y,useMDXComponents:()=>s,withMDXComponents:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o.apply(this,arguments)}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),m=function(e){return function(t){var r=s(t.components);return n.createElement(e,o({},t,{components:r}))}},s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(r),d=a,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(f,p(p({ref:t},c),{},{components:r})):n.createElement(f,p({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},73693:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=r(83117),a=(r(67294),r(3905));const o={state:"experimental"},i="Specification Format",p={unversionedId:"spec/about",id:"spec/about",title:"Specification Format",description:"Key Words and Terms",source:"@site/../doc/spec/about.md",sourceDirName:"spec",slug:"/spec/about",permalink:"/docs/spec/about",draft:!1,editUrl:"https://github.com/facebook/fbthrift/blob/main/thrift/website/../doc/spec/about.md",tags:[],version:"current",frontMatter:{state:"experimental"},sidebar:"sidebar",previous:{title:"Specification",permalink:"/docs/spec/"},next:{title:"Conformance",permalink:"/docs/spec/conformance/"}},l={},c=[{value:"Key Words and Terms",id:"key-words-and-terms",level:2},{value:"Metadata",id:"metadata",level:2}],m={toc:c};function s(e){let{components:t,...r}=e;return(0,a.mdx)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"specification-format"},"Specification Format"),(0,a.mdx)("h2",{id:"key-words-and-terms"},"Key Words and Terms"),(0,a.mdx)("p",null,"Keywords are used to indicate a precise, formulaic meaning. Keywords are denoted in bold, for example: ",(0,a.mdx)("strong",{parentName:"p"},"may"),", ",(0,a.mdx)("strong",{parentName:"p"},"must not"),", ",(0,a.mdx)("strong",{parentName:"p"},"should"),"."),(0,a.mdx)("p",null,"Key terms have a special meaning or interpretation to Thrift, and are denoted with italics, for example: ",(0,a.mdx)("em",{parentName:"p"},"native type"),", ",(0,a.mdx)("em",{parentName:"p"},"underlying type"),"."),(0,a.mdx)("h2",{id:"metadata"},"Metadata"),(0,a.mdx)("p",null,"All spec files ",(0,a.mdx)("strong",{parentName:"p"},"must")," start with metadata about the page, which includes:"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"state")," - The current state of the page. ",(0,a.mdx)("strong",{parentName:"li"},"Must")," be one of",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"draft")," - Spec in progress."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"experimental")," - Ready for testing."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"beta")," - Sufficient tests and documentation for public review and feedback."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"released")," - Complete, well tested and reviewed.")))),(0,a.mdx)("p",null,"For example, every page should start out with:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-yaml"},"---\nstate: draft\n---\n")))}s.isMDXComponent=!0}}]);